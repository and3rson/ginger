GAL22V10
WSESync

CLK  /RES  /WSE   NC    NC       NC    NC    NC    NC    NC      NC    GND
/OE   A0    A1    A2    SLOWCLK /BSR   B0    B1    B2    SLOWCS  PHI2  VCC

; A2..A0 - 4-bit counter (1st '163, bit 3 is not used), 0 on reset

A0.R  = /A0 * /RES

A1.R  =  A0 * /A1 * /RES
      + /A0 *  A1 * /RES

A2.R  = /A2 *  A1 *  A0 * /RES
      +  A2 * /A1       * /RES
      +  A2 * /A0       * /RES

; SLOWCS,B2,B1,B0 - 4-bit counter (2nd '163), 0 on reset, SLOWCS is bit 3
; Set = /PHI2
; Reset = PHI2 & /WSE

BSR  =  PHI2 * /WSE

B0.R  =  A0 * /PHI2 * /RES
      + /B0 * /BSR  * /RES

B1.R  =  A1         * /PHI2 * /RES
      +  B0 * /B1   * /BSR  * /RES
      + /B0 *  B1   * /BSR  * /RES

B2.R  =  A2             * /PHI2 * /RES
      + /B2 *  B1 *  B0 * /BSR  * /RES
      +  B2 * /B1       * /BSR  * /RES
      +  B2 * /B0       * /BSR  * /RES

; Bit 3 of 2nd '163
SLOWCS.R = /SLOWCS *  B2 *  B1 *  B0 *  /BSR * /RES
         +  SLOWCS * /B2             *  /BSR * /RES
         +  SLOWCS * /B1             *  /BSR * /RES
         +  SLOWCS * /B0             *  /BSR * /RES

; SLOWCLK output, 0 on reset
SLOWCLK.R = A2 * /RES

; PHI2 output, 1 on reset
/PHI2.R =  B0 *  B1 *  B2 *  SLOWCS * /RES + PHI2 * /WSE * /RES

DESCRIPTION
Implementation of gfoot's wait-state clock synchronization circuit, with credits to BDD ("wait-state-enable") & Dr Jefyll (original ideas)
riginal thread: http://forum.6502.org/viewtopic.php?f=4&t=7798
